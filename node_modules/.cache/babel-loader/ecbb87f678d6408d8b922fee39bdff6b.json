{"ast":null,"code":"var Module = function () {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\n  return function (Module) {\n    Module = Module || {};\n    var Module = typeof Module !== \"undefined\" ? Module : {};\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var moduleOverrides = {};\n    var key;\n\n    for (key in Module) {\n      if (Module.hasOwnProperty(key)) {\n        moduleOverrides[key] = Module[key];\n      }\n    }\n\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n\n    var quit_ = function (status, toThrow) {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = true;\n    var ENVIRONMENT_IS_WORKER = false;\n    var scriptDirectory = \"\";\n\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document !== \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n      } else {\n        scriptDirectory = \"\";\n      }\n\n      {\n        read_ = function (url) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = function (url) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = function (url, onload, onerror) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n\n          xhr.onload = function () {\n            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n              onload(xhr.response);\n              return;\n            }\n\n            onerror();\n          };\n\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = function (title) {\n        document.title = title;\n      };\n    } else {}\n\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.warn.bind(console);\n\n    for (key in moduleOverrides) {\n      if (moduleOverrides.hasOwnProperty(key)) {\n        Module[key] = moduleOverrides[key];\n      }\n    }\n\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var tempRet0 = 0;\n\n    var setTempRet0 = function (value) {\n      tempRet0 = value;\n    };\n\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n\n    if (typeof WebAssembly !== \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(\"Assertion failed: \" + text);\n      }\n    }\n\n    function getCFunc(ident) {\n      var func = Module[\"_\" + ident];\n      assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n      return func;\n    }\n\n    function ccall(ident, returnType, argTypes, args, opts) {\n      var toC = {\n        \"string\": function (str) {\n          var ret = 0;\n\n          if (str !== null && str !== undefined && str !== 0) {\n            var len = (str.length << 2) + 1;\n            ret = stackAlloc(len);\n            stringToUTF8(str, ret, len);\n          }\n\n          return ret;\n        },\n        \"array\": function (arr) {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") return UTF8ToString(ret);\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n\n      var ret = func.apply(null, cArgs);\n\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n\n      ret = onDone(ret);\n      return ret;\n    }\n\n    var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n    function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n        return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n      } else {\n        var str = \"\";\n\n        while (idx < endPtr) {\n          var u0 = heap[idx++];\n\n          if (!(u0 & 128)) {\n            str += String.fromCharCode(u0);\n            continue;\n          }\n\n          var u1 = heap[idx++] & 63;\n\n          if ((u0 & 224) == 192) {\n            str += String.fromCharCode((u0 & 31) << 6 | u1);\n            continue;\n          }\n\n          var u2 = heap[idx++] & 63;\n\n          if ((u0 & 240) == 224) {\n            u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n          } else {\n            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n          }\n\n          if (u0 < 65536) {\n            str += String.fromCharCode(u0);\n          } else {\n            var ch = u0 - 65536;\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n          }\n        }\n      }\n\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | u >> 6;\n          heap[outIdx++] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | u >> 12;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | u >> 18;\n          heap[outIdx++] = 128 | u >> 12 & 63;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n        if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;\n      }\n\n      return len;\n    }\n\n    var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\n    function UTF16ToString(ptr, maxBytesToRead) {\n      var endPtr = ptr;\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n\n      endPtr = idx << 1;\n\n      if (endPtr - ptr > 32 && UTF16Decoder) {\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n      } else {\n        var str = \"\";\n\n        for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n          var codeUnit = HEAP16[ptr + i * 2 >> 1];\n          if (codeUnit == 0) break;\n          str += String.fromCharCode(codeUnit);\n        }\n\n        return str;\n      }\n    }\n\n    function stringToUTF16(str, outPtr, maxBytesToWrite) {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2;\n      var startPtr = outPtr;\n      var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2;\n      }\n\n      HEAP16[outPtr >> 1] = 0;\n      return outPtr - startPtr;\n    }\n\n    function lengthBytesUTF16(str) {\n      return str.length * 2;\n    }\n\n    function UTF32ToString(ptr, maxBytesToRead) {\n      var i = 0;\n      var str = \"\";\n\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[ptr + i * 4 >> 2];\n        if (utf32 == 0) break;\n        ++i;\n\n        if (utf32 >= 65536) {\n          var ch = utf32 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n\n      return str;\n    }\n\n    function stringToUTF32(str, outPtr, maxBytesToWrite) {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n        }\n\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n\n      HEAP32[outPtr >> 2] = 0;\n      return outPtr - startPtr;\n    }\n\n    function lengthBytesUTF32(str) {\n      var len = 0;\n\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4;\n      }\n\n      return len;\n    }\n\n    function writeArrayToMemory(array, buffer) {\n      HEAP8.set(array, buffer);\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    function alignUp(x, multiple) {\n      if (x % multiple > 0) {\n        x += multiple - x % multiple;\n      }\n\n      return x;\n    }\n\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\n    function updateGlobalBufferAndViews(buf) {\n      buffer = buf;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n    }\n\n    var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n    var wasmTable;\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    Module[\"preloadedImages\"] = {};\n    Module[\"preloadedAudios\"] = {};\n\n    function abort(what) {\n      {\n        if (Module[\"onAbort\"]) {\n          Module[\"onAbort\"](what);\n        }\n      }\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += \". Build with -s ASSERTIONS=1 for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    var wasmBinaryFile;\n    wasmBinaryFile = \"process.wasm\";\n\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n\n        if (readBinary) {\n          return readBinary(file);\n        } else {\n          throw \"both async and sync fetching of the wasm failed\";\n        }\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch === \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            if (!response[\"ok\"]) {\n              throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n            }\n\n            return response[\"arrayBuffer\"]();\n          }).catch(function () {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n      }\n\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        \"a\": asmLibraryArg\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        wasmMemory = Module[\"asm\"][\"M\"];\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        wasmTable = Module[\"asm\"][\"O\"];\n        addOnInit(Module[\"asm\"][\"N\"]);\n        removeRunDependency(\"wasm-instantiate\");\n      }\n\n      addRunDependency(\"wasm-instantiate\");\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise().then(function (binary) {\n          return WebAssembly.instantiate(binary, info);\n        }).then(function (instance) {\n          return instance;\n        }).then(receiver, function (reason) {\n          err(\"failed to asynchronously prepare wasm: \" + reason);\n          abort(reason);\n        });\n      }\n\n      function instantiateAsync() {\n        if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            var result = WebAssembly.instantiateStreaming(response, info);\n            return result.then(receiveInstantiationResult, function (reason) {\n              err(\"wasm streaming compile failed: \" + reason);\n              err(\"falling back to ArrayBuffer instantiation\");\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            });\n          });\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err(\"Module.instantiateWasm callback failed with error: \" + e);\n          return false;\n        }\n      }\n\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        var callback = callbacks.shift();\n\n        if (typeof callback == \"function\") {\n          callback(Module);\n          continue;\n        }\n\n        var func = callback.func;\n\n        if (typeof func === \"number\") {\n          if (callback.arg === undefined) {\n            getWasmTableEntry(func)();\n          } else {\n            getWasmTableEntry(func)(callback.arg);\n          }\n        } else {\n          func(callback.arg === undefined ? null : callback.arg);\n        }\n      }\n    }\n\n    var wasmTableMirror = [];\n\n    function getWasmTableEntry(funcPtr) {\n      var func = wasmTableMirror[funcPtr];\n\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n\n      return func;\n    }\n\n    function ___cxa_allocate_exception(size) {\n      return _malloc(size + 16) + 16;\n    }\n\n    function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 16;\n\n      this.set_type = function (type) {\n        HEAP32[this.ptr + 4 >> 2] = type;\n      };\n\n      this.get_type = function () {\n        return HEAP32[this.ptr + 4 >> 2];\n      };\n\n      this.set_destructor = function (destructor) {\n        HEAP32[this.ptr + 8 >> 2] = destructor;\n      };\n\n      this.get_destructor = function () {\n        return HEAP32[this.ptr + 8 >> 2];\n      };\n\n      this.set_refcount = function (refcount) {\n        HEAP32[this.ptr >> 2] = refcount;\n      };\n\n      this.set_caught = function (caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[this.ptr + 12 >> 0] = caught;\n      };\n\n      this.get_caught = function () {\n        return HEAP8[this.ptr + 12 >> 0] != 0;\n      };\n\n      this.set_rethrown = function (rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[this.ptr + 13 >> 0] = rethrown;\n      };\n\n      this.get_rethrown = function () {\n        return HEAP8[this.ptr + 13 >> 0] != 0;\n      };\n\n      this.init = function (type, destructor) {\n        this.set_type(type);\n        this.set_destructor(destructor);\n        this.set_refcount(0);\n        this.set_caught(false);\n        this.set_rethrown(false);\n      };\n\n      this.add_ref = function () {\n        var value = HEAP32[this.ptr >> 2];\n        HEAP32[this.ptr >> 2] = value + 1;\n      };\n\n      this.release_ref = function () {\n        var prev = HEAP32[this.ptr >> 2];\n        HEAP32[this.ptr >> 2] = prev - 1;\n        return prev === 1;\n      };\n    }\n\n    var exceptionLast = 0;\n    var uncaughtExceptionCount = 0;\n\n    function ___cxa_throw(ptr, type, destructor) {\n      var info = new ExceptionInfo(ptr);\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw ptr;\n    }\n\n    var tupleRegistrations = {};\n\n    function runDestructors(destructors) {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    }\n\n    function simpleReadValueFromPointer(pointer) {\n      return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n    }\n\n    var awaitingDependencies = {};\n    var registeredTypes = {};\n    var typeDependencies = {};\n    var char_0 = 48;\n    var char_9 = 57;\n\n    function makeLegalFunctionName(name) {\n      if (undefined === name) {\n        return \"_unknown\";\n      }\n\n      name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n      var f = name.charCodeAt(0);\n\n      if (f >= char_0 && f <= char_9) {\n        return \"_\" + name;\n      } else {\n        return name;\n      }\n    }\n\n    function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n    }\n\n    function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function (message) {\n        this.name = errorName;\n        this.message = message;\n        var stack = new Error(message).stack;\n\n        if (stack !== undefined) {\n          this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n\n      errorClass.prototype.toString = function () {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return this.name + \": \" + this.message;\n        }\n      };\n\n      return errorClass;\n    }\n\n    var InternalError = undefined;\n\n    function throwInternalError(message) {\n      throw new InternalError(message);\n    }\n\n    function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n      myTypes.forEach(function (type) {\n        typeDependencies[type] = dependentTypes;\n      });\n\n      function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n\n        if (myTypeConverters.length !== myTypes.length) {\n          throwInternalError(\"Mismatched type converter count\");\n        }\n\n        for (var i = 0; i < myTypes.length; ++i) {\n          registerType(myTypes[i], myTypeConverters[i]);\n        }\n      }\n\n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach(function (dt, i) {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n\n          awaitingDependencies[dt].push(function () {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    }\n\n    function __embind_finalize_value_array(rawTupleType) {\n      var reg = tupleRegistrations[rawTupleType];\n      delete tupleRegistrations[rawTupleType];\n      var elements = reg.elements;\n      var elementsLength = elements.length;\n      var elementTypes = elements.map(function (elt) {\n        return elt.getterReturnType;\n      }).concat(elements.map(function (elt) {\n        return elt.setterArgumentType;\n      }));\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      whenDependentTypesAreResolved([rawTupleType], elementTypes, function (elementTypes) {\n        elements.forEach(function (elt, i) {\n          var getterReturnType = elementTypes[i];\n          var getter = elt.getter;\n          var getterContext = elt.getterContext;\n          var setterArgumentType = elementTypes[i + elementsLength];\n          var setter = elt.setter;\n          var setterContext = elt.setterContext;\n\n          elt.read = function (ptr) {\n            return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n          };\n\n          elt.write = function (ptr, o) {\n            var destructors = [];\n            setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n            runDestructors(destructors);\n          };\n        });\n        return [{\n          name: reg.name,\n          \"fromWireType\": function (ptr) {\n            var rv = new Array(elementsLength);\n\n            for (var i = 0; i < elementsLength; ++i) {\n              rv[i] = elements[i].read(ptr);\n            }\n\n            rawDestructor(ptr);\n            return rv;\n          },\n          \"toWireType\": function (destructors, o) {\n            if (elementsLength !== o.length) {\n              throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n            }\n\n            var ptr = rawConstructor();\n\n            for (var i = 0; i < elementsLength; ++i) {\n              elements[i].write(ptr, o[i]);\n            }\n\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n\n            return ptr;\n          },\n          \"argPackAdvance\": 8,\n          \"readValueFromPointer\": simpleReadValueFromPointer,\n          destructorFunction: rawDestructor\n        }];\n      });\n    }\n\n    var structRegistrations = {};\n\n    function __embind_finalize_value_object(structType) {\n      var reg = structRegistrations[structType];\n      delete structRegistrations[structType];\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      var fieldRecords = reg.fields;\n      var fieldTypes = fieldRecords.map(function (field) {\n        return field.getterReturnType;\n      }).concat(fieldRecords.map(function (field) {\n        return field.setterArgumentType;\n      }));\n      whenDependentTypesAreResolved([structType], fieldTypes, function (fieldTypes) {\n        var fields = {};\n        fieldRecords.forEach(function (field, i) {\n          var fieldName = field.fieldName;\n          var getterReturnType = fieldTypes[i];\n          var getter = field.getter;\n          var getterContext = field.getterContext;\n          var setterArgumentType = fieldTypes[i + fieldRecords.length];\n          var setter = field.setter;\n          var setterContext = field.setterContext;\n          fields[fieldName] = {\n            read: function (ptr) {\n              return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n            },\n            write: function (ptr, o) {\n              var destructors = [];\n              setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n              runDestructors(destructors);\n            }\n          };\n        });\n        return [{\n          name: reg.name,\n          \"fromWireType\": function (ptr) {\n            var rv = {};\n\n            for (var i in fields) {\n              rv[i] = fields[i].read(ptr);\n            }\n\n            rawDestructor(ptr);\n            return rv;\n          },\n          \"toWireType\": function (destructors, o) {\n            for (var fieldName in fields) {\n              if (!(fieldName in o)) {\n                throw new TypeError('Missing field:  \"' + fieldName + '\"');\n              }\n            }\n\n            var ptr = rawConstructor();\n\n            for (fieldName in fields) {\n              fields[fieldName].write(ptr, o[fieldName]);\n            }\n\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n\n            return ptr;\n          },\n          \"argPackAdvance\": 8,\n          \"readValueFromPointer\": simpleReadValueFromPointer,\n          destructorFunction: rawDestructor\n        }];\n      });\n    }\n\n    function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n\n    function getShiftFromSize(size) {\n      switch (size) {\n        case 1:\n          return 0;\n\n        case 2:\n          return 1;\n\n        case 4:\n          return 2;\n\n        case 8:\n          return 3;\n\n        default:\n          throw new TypeError(\"Unknown type size: \" + size);\n      }\n    }\n\n    function embind_init_charCodes() {\n      var codes = new Array(256);\n\n      for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i);\n      }\n\n      embind_charCodes = codes;\n    }\n\n    var embind_charCodes = undefined;\n\n    function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n\n      while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]];\n      }\n\n      return ret;\n    }\n\n    var BindingError = undefined;\n\n    function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n\n    function registerType(rawType, registeredInstance, options) {\n      options = options || {};\n\n      if (!(\"argPackAdvance\" in registeredInstance)) {\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n      }\n\n      var name = registeredInstance.name;\n\n      if (!rawType) {\n        throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n      }\n\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n        }\n      }\n\n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n\n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach(function (cb) {\n          cb();\n        });\n      }\n    }\n\n    function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function (wt) {\n          return !!wt;\n        },\n        \"toWireType\": function (destructors, o) {\n          return o ? trueValue : falseValue;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": function (pointer) {\n          var heap;\n\n          if (size === 1) {\n            heap = HEAP8;\n          } else if (size === 2) {\n            heap = HEAP16;\n          } else if (size === 4) {\n            heap = HEAP32;\n          } else {\n            throw new TypeError(\"Unknown boolean type size: \" + name);\n          }\n\n          return this[\"fromWireType\"](heap[pointer >> shift]);\n        },\n        destructorFunction: null\n      });\n    }\n\n    function ClassHandle_isAliasOf(other) {\n      if (!(this instanceof ClassHandle)) {\n        return false;\n      }\n\n      if (!(other instanceof ClassHandle)) {\n        return false;\n      }\n\n      var leftClass = this.$$.ptrType.registeredClass;\n      var left = this.$$.ptr;\n      var rightClass = other.$$.ptrType.registeredClass;\n      var right = other.$$.ptr;\n\n      while (leftClass.baseClass) {\n        left = leftClass.upcast(left);\n        leftClass = leftClass.baseClass;\n      }\n\n      while (rightClass.baseClass) {\n        right = rightClass.upcast(right);\n        rightClass = rightClass.baseClass;\n      }\n\n      return leftClass === rightClass && left === right;\n    }\n\n    function shallowCopyInternalPointer(o) {\n      return {\n        count: o.count,\n        deleteScheduled: o.deleteScheduled,\n        preservePointerOnDelete: o.preservePointerOnDelete,\n        ptr: o.ptr,\n        ptrType: o.ptrType,\n        smartPtr: o.smartPtr,\n        smartPtrType: o.smartPtrType\n      };\n    }\n\n    function throwInstanceAlreadyDeleted(obj) {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n\n      throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n    }\n\n    var finalizationRegistry = false;\n\n    function detachFinalizer(handle) {}\n\n    function runDestructor($$) {\n      if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    }\n\n    function releaseClassHandle($$) {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n\n      if (toDelete) {\n        runDestructor($$);\n      }\n    }\n\n    function attachFinalizer(handle) {\n      if (\"undefined\" === typeof FinalizationRegistry) {\n        attachFinalizer = function (handle) {\n          return handle;\n        };\n\n        return handle;\n      }\n\n      finalizationRegistry = new FinalizationRegistry(function (info) {\n        releaseClassHandle(info.$$);\n      });\n\n      attachFinalizer = function (handle) {\n        var $$ = handle.$$;\n        var info = {\n          $$: $$\n        };\n        finalizationRegistry.register(handle, info, handle);\n        return handle;\n      };\n\n      detachFinalizer = function (handle) {\n        finalizationRegistry.unregister(handle);\n      };\n\n      return attachFinalizer(handle);\n    }\n\n    function ClassHandle_clone() {\n      if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this);\n      }\n\n      if (this.$$.preservePointerOnDelete) {\n        this.$$.count.value += 1;\n        return this;\n      } else {\n        var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n          $$: {\n            value: shallowCopyInternalPointer(this.$$)\n          }\n        }));\n        clone.$$.count.value += 1;\n        clone.$$.deleteScheduled = false;\n        return clone;\n      }\n    }\n\n    function ClassHandle_delete() {\n      if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this);\n      }\n\n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n        throwBindingError(\"Object already scheduled for deletion\");\n      }\n\n      detachFinalizer(this);\n      releaseClassHandle(this.$$);\n\n      if (!this.$$.preservePointerOnDelete) {\n        this.$$.smartPtr = undefined;\n        this.$$.ptr = undefined;\n      }\n    }\n\n    function ClassHandle_isDeleted() {\n      return !this.$$.ptr;\n    }\n\n    var delayFunction = undefined;\n    var deletionQueue = [];\n\n    function flushPendingDeletes() {\n      while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj[\"delete\"]();\n      }\n    }\n\n    function ClassHandle_deleteLater() {\n      if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this);\n      }\n\n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n        throwBindingError(\"Object already scheduled for deletion\");\n      }\n\n      deletionQueue.push(this);\n\n      if (deletionQueue.length === 1 && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n\n      this.$$.deleteScheduled = true;\n      return this;\n    }\n\n    function init_ClassHandle() {\n      ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n      ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n      ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n      ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n      ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n    }\n\n    function ClassHandle() {}\n\n    var registeredPointers = {};\n\n    function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n\n        proto[methodName] = function () {\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n            throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n          }\n\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }\n\n    function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n          throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n        }\n\n        ensureOverloadTable(Module, name, name);\n\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n        }\n\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    }\n\n    function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n\n    function upcastPointer(ptr, ptrClass, desiredClass) {\n      while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n          throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n        }\n\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass;\n      }\n\n      return ptr;\n    }\n\n    function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(\"null is not a valid \" + this.name);\n        }\n\n        return 0;\n      }\n\n      if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n      }\n\n      if (!handle.$$.ptr) {\n        throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n      }\n\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n\n    function genericPointerToWireType(destructors, handle) {\n      var ptr;\n\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(\"null is not a valid \" + this.name);\n        }\n\n        if (this.isSmartPointer) {\n          ptr = this.rawConstructor();\n\n          if (destructors !== null) {\n            destructors.push(this.rawDestructor, ptr);\n          }\n\n          return ptr;\n        } else {\n          return 0;\n        }\n      }\n\n      if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n      }\n\n      if (!handle.$$.ptr) {\n        throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n      }\n\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n      }\n\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n\n      if (this.isSmartPointer) {\n        if (undefined === handle.$$.smartPtr) {\n          throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n        }\n\n        switch (this.sharingPolicy) {\n          case 0:\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n            }\n\n            break;\n\n          case 1:\n            ptr = handle.$$.smartPtr;\n            break;\n\n          case 2:\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              var clonedHandle = handle[\"clone\"]();\n              ptr = this.rawShare(ptr, Emval.toHandle(function () {\n                clonedHandle[\"delete\"]();\n              }));\n\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n            }\n\n            break;\n\n          default:\n            throwBindingError(\"Unsupporting sharing policy\");\n        }\n      }\n\n      return ptr;\n    }\n\n    function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(\"null is not a valid \" + this.name);\n        }\n\n        return 0;\n      }\n\n      if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n      }\n\n      if (!handle.$$.ptr) {\n        throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n      }\n\n      if (handle.$$.ptrType.isConst) {\n        throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n      }\n\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n\n    function RegisteredPointer_getPointee(ptr) {\n      if (this.rawGetPointee) {\n        ptr = this.rawGetPointee(ptr);\n      }\n\n      return ptr;\n    }\n\n    function RegisteredPointer_destructor(ptr) {\n      if (this.rawDestructor) {\n        this.rawDestructor(ptr);\n      }\n    }\n\n    function RegisteredPointer_deleteObject(handle) {\n      if (handle !== null) {\n        handle[\"delete\"]();\n      }\n    }\n\n    function downcastPointer(ptr, ptrClass, desiredClass) {\n      if (ptrClass === desiredClass) {\n        return ptr;\n      }\n\n      if (undefined === desiredClass.baseClass) {\n        return null;\n      }\n\n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n\n      if (rv === null) {\n        return null;\n      }\n\n      return desiredClass.downcast(rv);\n    }\n\n    function getInheritedInstanceCount() {\n      return Object.keys(registeredInstances).length;\n    }\n\n    function getLiveInheritedInstances() {\n      var rv = [];\n\n      for (var k in registeredInstances) {\n        if (registeredInstances.hasOwnProperty(k)) {\n          rv.push(registeredInstances[k]);\n        }\n      }\n\n      return rv;\n    }\n\n    function setDelayFunction(fn) {\n      delayFunction = fn;\n\n      if (deletionQueue.length && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n    }\n\n    function init_embind() {\n      Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n      Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n      Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n      Module[\"setDelayFunction\"] = setDelayFunction;\n    }\n\n    var registeredInstances = {};\n\n    function getBasestPointer(class_, ptr) {\n      if (ptr === undefined) {\n        throwBindingError(\"ptr should not be undefined\");\n      }\n\n      while (class_.baseClass) {\n        ptr = class_.upcast(ptr);\n        class_ = class_.baseClass;\n      }\n\n      return ptr;\n    }\n\n    function getInheritedInstance(class_, ptr) {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    }\n\n    function makeClassHandle(prototype, record) {\n      if (!record.ptrType || !record.ptr) {\n        throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n      }\n\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n\n      if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n      }\n\n      record.count = {\n        value: 1\n      };\n      return attachFinalizer(Object.create(prototype, {\n        $$: {\n          value: record\n        }\n      }));\n    }\n\n    function RegisteredPointer_fromWireType(ptr) {\n      var rawPointer = this.getPointee(ptr);\n\n      if (!rawPointer) {\n        this.destructor(ptr);\n        return null;\n      }\n\n      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n\n      if (undefined !== registeredInstance) {\n        if (0 === registeredInstance.$$.count.value) {\n          registeredInstance.$$.ptr = rawPointer;\n          registeredInstance.$$.smartPtr = ptr;\n          return registeredInstance[\"clone\"]();\n        } else {\n          var rv = registeredInstance[\"clone\"]();\n          this.destructor(ptr);\n          return rv;\n        }\n      }\n\n      function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this.pointeeType,\n            ptr: rawPointer,\n            smartPtrType: this,\n            smartPtr: ptr\n          });\n        } else {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this,\n            ptr: ptr\n          });\n        }\n      }\n\n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n\n      if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this);\n      }\n\n      var toType;\n\n      if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType;\n      } else {\n        toType = registeredPointerRecord.pointerType;\n      }\n\n      var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n\n      if (dp === null) {\n        return makeDefaultHandle.call(this);\n      }\n\n      if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n          smartPtrType: this,\n          smartPtr: ptr\n        });\n      } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp\n        });\n      }\n    }\n\n    function init_RegisteredPointer() {\n      RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n      RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n      RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n      RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n      RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n      RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n    }\n\n    function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n\n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n          this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        } else {\n          this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        }\n      } else {\n        this[\"toWireType\"] = genericPointerToWireType;\n      }\n    }\n\n    function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError(\"Replacing nonexistant public symbol\");\n      }\n\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    }\n\n    function dynCallLegacy(sig, ptr, args) {\n      var f = Module[\"dynCall_\" + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    }\n\n    function dynCall(sig, ptr, args) {\n      if (sig.includes(\"j\")) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n\n      return getWasmTableEntry(ptr).apply(null, args);\n    }\n\n    function getDynCaller(sig, ptr) {\n      var argCache = [];\n      return function () {\n        argCache.length = arguments.length;\n\n        for (var i = 0; i < arguments.length; i++) {\n          argCache[i] = arguments[i];\n        }\n\n        return dynCall(sig, ptr, argCache);\n      };\n    }\n\n    function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n\n      function makeDynCaller() {\n        if (signature.includes(\"j\")) {\n          return getDynCaller(signature, rawFunction);\n        }\n\n        return getWasmTableEntry(rawFunction);\n      }\n\n      var fp = makeDynCaller();\n\n      if (typeof fp !== \"function\") {\n        throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n      }\n\n      return fp;\n    }\n\n    var UnboundTypeError = undefined;\n\n    function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n\n      var rv = readLatin1String(ptr);\n\n      _free(ptr);\n\n      return rv;\n    }\n\n    function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n\n        if (registeredTypes[type]) {\n          return;\n        }\n\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n\n      types.forEach(visit);\n      throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n    }\n\n    function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n\n      if (upcast) {\n        upcast = embind__requireFunction(upcastSignature, upcast);\n      }\n\n      if (downcast) {\n        downcast = embind__requireFunction(downcastSignature, downcast);\n      }\n\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      var legalFunctionName = makeLegalFunctionName(name);\n      exposePublicSymbol(legalFunctionName, function () {\n        throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [baseClassRawType]);\n      });\n      whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function (base) {\n        base = base[0];\n        var baseClass;\n        var basePrototype;\n\n        if (baseClassRawType) {\n          baseClass = base.registeredClass;\n          basePrototype = baseClass.instancePrototype;\n        } else {\n          basePrototype = ClassHandle.prototype;\n        }\n\n        var constructor = createNamedFunction(legalFunctionName, function () {\n          if (Object.getPrototypeOf(this) !== instancePrototype) {\n            throw new BindingError(\"Use 'new' to construct \" + name);\n          }\n\n          if (undefined === registeredClass.constructor_body) {\n            throw new BindingError(name + \" has no accessible constructor\");\n          }\n\n          var body = registeredClass.constructor_body[arguments.length];\n\n          if (undefined === body) {\n            throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n          }\n\n          return body.apply(this, arguments);\n        });\n        var instancePrototype = Object.create(basePrototype, {\n          constructor: {\n            value: constructor\n          }\n        });\n        constructor.prototype = instancePrototype;\n        var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n        var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n        var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n        var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n        registeredPointers[rawType] = {\n          pointerType: pointerConverter,\n          constPointerType: constPointerConverter\n        };\n        replacePublicSymbol(legalFunctionName, constructor);\n        return [referenceConverter, pointerConverter, constPointerConverter];\n      });\n    }\n\n    function heap32VectorToArray(count, firstElement) {\n      var array = [];\n\n      for (var i = 0; i < count; i++) {\n        array.push(HEAP32[(firstElement >> 2) + i]);\n      }\n\n      return array;\n    }\n\n    function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n      assert(argCount > 0);\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n      whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n        classType = classType[0];\n        var humanName = \"constructor \" + classType.name;\n\n        if (undefined === classType.registeredClass.constructor_body) {\n          classType.registeredClass.constructor_body = [];\n        }\n\n        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n          throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n        }\n\n        classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n          throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n        };\n\n        whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n          argTypes.splice(1, 0, null);\n          classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n          return [];\n        });\n        return [];\n      });\n    }\n\n    function new_(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n      }\n\n      var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function () {});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy();\n      var r = constructor.apply(obj, argumentList);\n      return r instanceof Object ? r : obj;\n    }\n\n    function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n      var argCount = argTypes.length;\n\n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n\n      var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n      var needsDestructorStack = false;\n\n      for (var i = 1; i < argTypes.length; ++i) {\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n          needsDestructorStack = true;\n          break;\n        }\n      }\n\n      var returns = argTypes[0].name !== \"void\";\n      var argsList = \"\";\n      var argsListWired = \"\";\n\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n        argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n      }\n\n      var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n\n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n\n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n\n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n      }\n\n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n        args1.push(\"argType\" + i);\n        args2.push(argTypes[i + 2]);\n      }\n\n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n\n      invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n\n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n          var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n            args1.push(paramName + \"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n\n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n      } else {}\n\n      invokerFnBody += \"}\\n\";\n      args1.push(invokerFnBody);\n      var invokerFunction = new_(Function, args1).apply(null, args2);\n      return invokerFunction;\n    }\n\n    function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n      whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n        classType = classType[0];\n        var humanName = classType.name + \".\" + methodName;\n\n        if (methodName.startsWith(\"@@\")) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n\n        if (isPureVirtual) {\n          classType.registeredClass.pureVirtualFunctions.push(methodName);\n        }\n\n        function unboundTypesHandler() {\n          throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n        }\n\n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n\n        if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n          unboundTypesHandler.argCount = argCount - 2;\n          unboundTypesHandler.className = classType.name;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n        }\n\n        whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n          var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n\n          if (undefined === proto[methodName].overloadTable) {\n            memberFunction.argCount = argCount - 2;\n            proto[methodName] = memberFunction;\n          } else {\n            proto[methodName].overloadTable[argCount - 2] = memberFunction;\n          }\n\n          return [];\n        });\n        return [];\n      });\n    }\n\n    function validateThis(this_, classType, humanName) {\n      if (!(this_ instanceof Object)) {\n        throwBindingError(humanName + ' with invalid \"this\": ' + this_);\n      }\n\n      if (!(this_ instanceof classType.registeredClass.constructor)) {\n        throwBindingError(humanName + ' incompatible with \"this\" of type ' + this_.constructor.name);\n      }\n\n      if (!this_.$$.ptr) {\n        throwBindingError(\"cannot call emscripten binding method \" + humanName + \" on deleted object\");\n      }\n\n      return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\n    }\n\n    function __embind_register_class_property(classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n      fieldName = readLatin1String(fieldName);\n      getter = embind__requireFunction(getterSignature, getter);\n      whenDependentTypesAreResolved([], [classType], function (classType) {\n        classType = classType[0];\n        var humanName = classType.name + \".\" + fieldName;\n        var desc = {\n          get: function () {\n            throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [getterReturnType, setterArgumentType]);\n          },\n          enumerable: true,\n          configurable: true\n        };\n\n        if (setter) {\n          desc.set = function () {\n            throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [getterReturnType, setterArgumentType]);\n          };\n        } else {\n          desc.set = function (v) {\n            throwBindingError(humanName + \" is a read-only property\");\n          };\n        }\n\n        Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n        whenDependentTypesAreResolved([], setter ? [getterReturnType, setterArgumentType] : [getterReturnType], function (types) {\n          var getterReturnType = types[0];\n          var desc = {\n            get: function () {\n              var ptr = validateThis(this, classType, humanName + \" getter\");\n              return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n            },\n            enumerable: true\n          };\n\n          if (setter) {\n            setter = embind__requireFunction(setterSignature, setter);\n            var setterArgumentType = types[1];\n\n            desc.set = function (v) {\n              var ptr = validateThis(this, classType, humanName + \" setter\");\n              var destructors = [];\n              setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\n              runDestructors(destructors);\n            };\n          }\n\n          Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n          return [];\n        });\n        return [];\n      });\n    }\n\n    var emval_free_list = [];\n    var emval_handle_array = [{}, {\n      value: undefined\n    }, {\n      value: null\n    }, {\n      value: true\n    }, {\n      value: false\n    }];\n\n    function __emval_decref(handle) {\n      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n        emval_handle_array[handle] = undefined;\n        emval_free_list.push(handle);\n      }\n    }\n\n    function count_emval_handles() {\n      var count = 0;\n\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          ++count;\n        }\n      }\n\n      return count;\n    }\n\n    function get_first_emval() {\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          return emval_handle_array[i];\n        }\n      }\n\n      return null;\n    }\n\n    function init_emval() {\n      Module[\"count_emval_handles\"] = count_emval_handles;\n      Module[\"get_first_emval\"] = get_first_emval;\n    }\n\n    var Emval = {\n      toValue: function (handle) {\n        if (!handle) {\n          throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n        }\n\n        return emval_handle_array[handle].value;\n      },\n      toHandle: function (value) {\n        switch (value) {\n          case undefined:\n            {\n              return 1;\n            }\n\n          case null:\n            {\n              return 2;\n            }\n\n          case true:\n            {\n              return 3;\n            }\n\n          case false:\n            {\n              return 4;\n            }\n\n          default:\n            {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = {\n                refcount: 1,\n                value: value\n              };\n              return handle;\n            }\n        }\n      }\n    };\n\n    function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function (handle) {\n          var rv = Emval.toValue(handle);\n\n          __emval_decref(handle);\n\n          return rv;\n        },\n        \"toWireType\": function (destructors, value) {\n          return Emval.toHandle(value);\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: null\n      });\n    }\n\n    function enumReadValueFromPointer(name, shift, signed) {\n      switch (shift) {\n        case 0:\n          return function (pointer) {\n            var heap = signed ? HEAP8 : HEAPU8;\n            return this[\"fromWireType\"](heap[pointer]);\n          };\n\n        case 1:\n          return function (pointer) {\n            var heap = signed ? HEAP16 : HEAPU16;\n            return this[\"fromWireType\"](heap[pointer >> 1]);\n          };\n\n        case 2:\n          return function (pointer) {\n            var heap = signed ? HEAP32 : HEAPU32;\n            return this[\"fromWireType\"](heap[pointer >> 2]);\n          };\n\n        default:\n          throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n\n    function __embind_register_enum(rawType, name, size, isSigned) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n\n      function ctor() {}\n\n      ctor.values = {};\n      registerType(rawType, {\n        name: name,\n        constructor: ctor,\n        \"fromWireType\": function (c) {\n          return this.constructor.values[c];\n        },\n        \"toWireType\": function (destructors, c) {\n          return c.value;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n        destructorFunction: null\n      });\n      exposePublicSymbol(name, ctor);\n    }\n\n    function requireRegisteredType(rawType, humanName) {\n      var impl = registeredTypes[rawType];\n\n      if (undefined === impl) {\n        throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n      }\n\n      return impl;\n    }\n\n    function __embind_register_enum_value(rawEnumType, name, enumValue) {\n      var enumType = requireRegisteredType(rawEnumType, \"enum\");\n      name = readLatin1String(name);\n      var Enum = enumType.constructor;\n      var Value = Object.create(enumType.constructor.prototype, {\n        value: {\n          value: enumValue\n        },\n        constructor: {\n          value: createNamedFunction(enumType.name + \"_\" + name, function () {})\n        }\n      });\n      Enum.values[enumValue] = Value;\n      Enum[name] = Value;\n    }\n\n    function _embind_repr(v) {\n      if (v === null) {\n        return \"null\";\n      }\n\n      var t = typeof v;\n\n      if (t === \"object\" || t === \"array\" || t === \"function\") {\n        return v.toString();\n      } else {\n        return \"\" + v;\n      }\n    }\n\n    function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n        case 2:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n          };\n\n        case 3:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n          };\n\n        default:\n          throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }\n\n    function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function (value) {\n          return value;\n        },\n        \"toWireType\": function (destructors, value) {\n          if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n            throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n          }\n\n          return value;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n        destructorFunction: null\n      });\n    }\n\n    function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n      exposePublicSymbol(name, function () {\n        throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n      }, argCount - 1);\n      whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n        var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n        return [];\n      });\n    }\n\n    function integerReadValueFromPointer(name, shift, signed) {\n      switch (shift) {\n        case 0:\n          return signed ? function readS8FromPointer(pointer) {\n            return HEAP8[pointer];\n          } : function readU8FromPointer(pointer) {\n            return HEAPU8[pointer];\n          };\n\n        case 1:\n          return signed ? function readS16FromPointer(pointer) {\n            return HEAP16[pointer >> 1];\n          } : function readU16FromPointer(pointer) {\n            return HEAPU16[pointer >> 1];\n          };\n\n        case 2:\n          return signed ? function readS32FromPointer(pointer) {\n            return HEAP32[pointer >> 2];\n          } : function readU32FromPointer(pointer) {\n            return HEAPU32[pointer >> 2];\n          };\n\n        default:\n          throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n\n    function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n      name = readLatin1String(name);\n\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n\n      var shift = getShiftFromSize(size);\n\n      var fromWireType = function (value) {\n        return value;\n      };\n\n      if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n\n        fromWireType = function (value) {\n          return value << bitshift >>> bitshift;\n        };\n      }\n\n      var isUnsignedType = name.includes(\"unsigned\");\n      registerType(primitiveType, {\n        name: name,\n        \"fromWireType\": fromWireType,\n        \"toWireType\": function (destructors, value) {\n          if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n            throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n          }\n\n          if (value < minRange || value > maxRange) {\n            throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n          }\n\n          return isUnsignedType ? value >>> 0 : value | 0;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n        destructorFunction: null\n      });\n    }\n\n    function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n      var TA = typeMapping[dataTypeIndex];\n\n      function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle];\n        var data = heap[handle + 1];\n        return new TA(buffer, data, size);\n      }\n\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": decodeMemoryView,\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": decodeMemoryView\n      }, {\n        ignoreDuplicateRegistrations: true\n      });\n    }\n\n    function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8 = name === \"std::string\";\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function (value) {\n          var length = HEAPU32[value >> 2];\n          var str;\n\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = value + 4;\n\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i;\n\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n            }\n\n            str = a.join(\"\");\n          }\n\n          _free(value);\n\n          return str;\n        },\n        \"toWireType\": function (destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n\n          var getLength;\n          var valueIsOfTypeString = typeof value === \"string\";\n\n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError(\"Cannot pass non-string to std::string\");\n          }\n\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            getLength = function () {\n              return lengthBytesUTF8(value);\n            };\n          } else {\n            getLength = function () {\n              return value.length;\n            };\n          }\n\n          var length = getLength();\n\n          var ptr = _malloc(4 + length + 1);\n\n          HEAPU32[ptr >> 2] = length;\n\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr + 4, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n\n                if (charCode > 255) {\n                  _free(ptr);\n\n                  throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                }\n\n                HEAPU8[ptr + 4 + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + 4 + i] = value[i];\n              }\n            }\n          }\n\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n\n          return ptr;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: function (ptr) {\n          _free(ptr);\n        }\n      });\n    }\n\n    function __embind_register_std_wstring(rawType, charSize, name) {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n\n        getHeap = function () {\n          return HEAPU16;\n        };\n\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n\n        getHeap = function () {\n          return HEAPU32;\n        };\n\n        shift = 2;\n      }\n\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function (value) {\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n          var decodeStartPtr = value + 4;\n\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n\n          _free(value);\n\n          return str;\n        },\n        \"toWireType\": function (destructors, value) {\n          if (!(typeof value === \"string\")) {\n            throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n          }\n\n          var length = lengthBytesUTF(value);\n\n          var ptr = _malloc(4 + length + charSize);\n\n          HEAPU32[ptr >> 2] = length >> shift;\n          encodeString(value, ptr + 4, length + charSize);\n\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n\n          return ptr;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: function (ptr) {\n          _free(ptr);\n        }\n      });\n    }\n\n    function __embind_register_value_array(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n      tupleRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        elements: []\n      };\n    }\n\n    function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n      tupleRegistrations[rawTupleType].elements.push({\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext\n      });\n    }\n\n    function __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n      structRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        fields: []\n      };\n    }\n\n    function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n      structRegistrations[structType].fields.push({\n        fieldName: readLatin1String(fieldName),\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext\n      });\n    }\n\n    function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true,\n        name: name,\n        \"argPackAdvance\": 0,\n        \"fromWireType\": function () {\n          return undefined;\n        },\n        \"toWireType\": function (destructors, o) {\n          return undefined;\n        }\n      });\n    }\n\n    function __emval_incref(handle) {\n      if (handle > 4) {\n        emval_handle_array[handle].refcount += 1;\n      }\n    }\n\n    function __emval_take_value(type, argv) {\n      type = requireRegisteredType(type, \"_emval_take_value\");\n      var v = type[\"readValueFromPointer\"](argv);\n      return Emval.toHandle(v);\n    }\n\n    function _abort() {\n      abort(\"\");\n    }\n\n    function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n\n    function emscripten_realloc_buffer(size) {\n      try {\n        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1;\n      } catch (e) {}\n    }\n\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      var maxHeapSize = 2147483648;\n\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = emscripten_realloc_buffer(newSize);\n\n        if (replacement) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    var ENV = {};\n\n    function getExecutableName() {\n      return thisProgram || \"./this.program\";\n    }\n\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n          \"USER\": \"web_user\",\n          \"LOGNAME\": \"web_user\",\n          \"PATH\": \"/\",\n          \"PWD\": \"/\",\n          \"HOME\": \"/home/web_user\",\n          \"LANG\": lang,\n          \"_\": getExecutableName()\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];else env[x] = ENV[x];\n        }\n\n        var strings = [];\n\n        for (var x in env) {\n          strings.push(x + \"=\" + env[x]);\n        }\n\n        getEnvStrings.strings = strings;\n      }\n\n      return getEnvStrings.strings;\n    }\n\n    var PATH = {\n      splitPath: function (filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: function (parts, allowAboveRoot) {\n        var up = 0;\n\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n\n          if (last === \".\") {\n            parts.splice(i, 1);\n          } else if (last === \"..\") {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift(\"..\");\n          }\n        }\n\n        return parts;\n      },\n      normalize: function (path) {\n        var isAbsolute = path.charAt(0) === \"/\",\n            trailingSlash = path.substr(-1) === \"/\";\n        path = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n          return !!p;\n        }), !isAbsolute).join(\"/\");\n\n        if (!path && !isAbsolute) {\n          path = \".\";\n        }\n\n        if (path && trailingSlash) {\n          path += \"/\";\n        }\n\n        return (isAbsolute ? \"/\" : \"\") + path;\n      },\n      dirname: function (path) {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n\n        if (!root && !dir) {\n          return \".\";\n        }\n\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n\n        return root + dir;\n      },\n      basename: function (path) {\n        if (path === \"/\") return \"/\";\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf(\"/\");\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      extname: function (path) {\n        return PATH.splitPath(path)[3];\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join(\"/\"));\n      },\n      join2: function (l, r) {\n        return PATH.normalize(l + \"/\" + r);\n      }\n    };\n\n    function getRandomDevice() {\n      if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n        var randomBuffer = new Uint8Array(1);\n        return function () {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return function () {\n        abort(\"randomDevice\");\n      };\n    }\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = \"\",\n            resolvedAbsolute = false;\n\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path !== \"string\") {\n            throw new TypeError(\"Arguments to path.resolve must be strings\");\n          } else if (!path) {\n            return \"\";\n          }\n\n          resolvedPath = path + \"/\" + resolvedPath;\n          resolvedAbsolute = path.charAt(0) === \"/\";\n        }\n\n        resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function (p) {\n          return !!p;\n        }), !resolvedAbsolute).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n      },\n      relative: function (from, to) {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n\n        function trim(arr) {\n          var start = 0;\n\n          for (; start < arr.length; start++) {\n            if (arr[start] !== \"\") break;\n          }\n\n          var end = arr.length - 1;\n\n          for (; end >= 0; end--) {\n            if (arr[end] !== \"\") break;\n          }\n\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n\n        var outputParts = [];\n\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push(\"..\");\n        }\n\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n      }\n    };\n    var TTY = {\n      ttys: [],\n      init: function () {},\n      shutdown: function () {},\n      register: function (dev, ops) {\n        TTY.ttys[dev] = {\n          input: [],\n          output: [],\n          ops: ops\n        };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function (stream) {\n          stream.tty.ops.flush(stream.tty);\n        },\n        flush: function (stream) {\n          stream.tty.ops.flush(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n\n          var bytesRead = 0;\n\n          for (var i = 0; i < length; i++) {\n            var result;\n\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n\n          return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n\n          return i;\n        }\n      },\n      default_tty_ops: {\n        get_char: function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n\n            if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n\n            if (!result) {\n              return null;\n            }\n\n            tty.input = intArrayFromString(result, true);\n          }\n\n          return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        flush: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      },\n      default_tty1_ops: {\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        flush: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      }\n    };\n\n    function mmapAlloc(size) {\n      abort();\n    }\n\n    var MEMFS = {\n      ops_table: null,\n      mount: function (mount) {\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n\n        var node = FS.createNode(parent, name, mode, dev);\n\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n\n        return node;\n      },\n      getFileDataAsTypedArray: function (node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n          }\n\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function (node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function (parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n          var entries = [\".\", \"..\"];\n\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n\n            entries.push(key);\n          }\n\n          return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n\n          return node.link;\n        }\n      },\n      stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n\n          return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function (stream, offset, whence) {\n          var position = offset;\n\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n\n          return position;\n        },\n        allocate: function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n        mmap: function (stream, address, length, position, prot, flags) {\n          if (address !== 0) {\n            throw new FS.ErrnoError(28);\n          }\n\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n\n            allocated = true;\n            ptr = mmapAlloc(length);\n\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n\n            HEAP8.set(contents, ptr);\n          }\n\n          return {\n            ptr: ptr,\n            allocated: allocated\n          };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n\n          if (mmapFlags & 2) {\n            return 0;\n          }\n\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        }\n      }\n    };\n\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n      readAsync(url, function (arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, function (event) {\n        if (onerror) {\n          onerror();\n        } else {\n          throw 'Loading data file \"' + url + '\" failed.';\n        }\n      });\n      if (dep) addRunDependency(dep);\n    }\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: function (path, opts) {\n        path = PATH_FS.resolve(FS.cwd(), path);\n        opts = opts || {};\n        if (!path) return {\n          path: \"\",\n          node: null\n        };\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n\n        for (var key in defaults) {\n          if (opts[key] === undefined) {\n            opts[key] = defaults[key];\n          }\n        }\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n          return !!p;\n        }), false);\n        var current = FS.root;\n        var current_path = \"/\";\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || islast && opts.follow_mount) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return {\n          path: current_path,\n          node: current\n        };\n      },\n      getPath: function (node) {\n        var path;\n\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n          }\n\n          path = path ? node.name + \"/\" + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: function (parentid, name) {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n        }\n\n        return (parentid + hash >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: function (node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: function (node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: function (parent, name) {\n        var errCode = FS.mayLookup(parent);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n\n        var hash = FS.hashName(parent.id, name);\n\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: function (parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n      destroyNode: function (node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: function (node) {\n        return node === node.parent;\n      },\n      isMountpoint: function (node) {\n        return !!node.mounted;\n      },\n      isFile: function (mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir: function (mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink: function (mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: function (mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: function (mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: function (mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: function (mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: {\n        \"r\": 0,\n        \"r+\": 2,\n        \"w\": 577,\n        \"w+\": 578,\n        \"a\": 1089,\n        \"a+\": 1090\n      },\n      modeStringToFlags: function (str) {\n        var flags = FS.flagModes[str];\n\n        if (typeof flags === \"undefined\") {\n          throw new Error(\"Unknown file open mode: \" + str);\n        }\n\n        return flags;\n      },\n      flagsToPermissionString: function (flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n\n        if (flag & 512) {\n          perms += \"w\";\n        }\n\n        return perms;\n      },\n      nodePermissions: function (node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n          return 2;\n        }\n\n        return 0;\n      },\n      mayLookup: function (dir) {\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: function (dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n\n        return FS.nodePermissions(dir, \"wx\");\n      },\n      mayDelete: function (dir, name, isdir) {\n        var node;\n\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n\n        var errCode = FS.nodePermissions(dir, \"wx\");\n\n        if (errCode) {\n          return errCode;\n        }\n\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n\n        return 0;\n      },\n      mayOpen: function (node, flags) {\n        if (!node) {\n          return 44;\n        }\n\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n            return 31;\n          }\n        }\n\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: function (fd_start, fd_end) {\n        fd_start = fd_start || 0;\n        fd_end = fd_end || FS.MAX_OPEN_FDS;\n\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n\n        throw new FS.ErrnoError(33);\n      },\n      getStream: function (fd) {\n        return FS.streams[fd];\n      },\n      createStream: function (stream, fd_start, fd_end) {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {};\n\n          FS.FSStream.prototype = {\n            object: {\n              get: function () {\n                return this.node;\n              },\n              set: function (val) {\n                this.node = val;\n              }\n            },\n            isRead: {\n              get: function () {\n                return (this.flags & 2097155) !== 1;\n              }\n            },\n            isWrite: {\n              get: function () {\n                return (this.flags & 2097155) !== 0;\n              }\n            },\n            isAppend: {\n              get: function () {\n                return this.flags & 1024;\n              }\n            }\n          };\n        }\n\n        var newStream = new FS.FSStream();\n\n        for (var p in stream) {\n          newStream[p] = stream[p];\n        }\n\n        stream = newStream;\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: function (fd) {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: function (stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: function () {\n          throw new FS.ErrnoError(70);\n        }\n      },\n      major: function (dev) {\n        return dev >> 8;\n      },\n      minor: function (dev) {\n        return dev & 255;\n      },\n      makedev: function (ma, mi) {\n        return ma << 8 | mi;\n      },\n      registerDevice: function (dev, ops) {\n        FS.devices[dev] = {\n          stream_ops: ops\n        };\n      },\n      getDevice: function (dev) {\n        return FS.devices[dev];\n      },\n      getMounts: function (mount) {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: function (populate, callback) {\n        if (typeof populate === \"function\") {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n\n            return;\n          }\n\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach(function (mount) {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: function (type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, {\n            follow_mount: false\n          });\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: function (mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, {\n          follow_mount: false\n        });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach(function (hash) {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: function (parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: function (path, mode, dev) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n\n        if (!name || name === \".\" || name === \"..\") {\n          throw new FS.ErrnoError(28);\n        }\n\n        var errCode = FS.mayCreate(parent, name);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: function (path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: function (path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: function (path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += \"/\" + dirs[i];\n\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: function (path, mode, dev) {\n        if (typeof dev === \"undefined\") {\n          dev = mode;\n          mode = 438;\n        }\n\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: function (oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n\n        var lookup = FS.lookupPath(newpath, {\n          parent: true\n        });\n        var parent = lookup.node;\n\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: function (old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n        lookup = FS.lookupPath(old_path, {\n          parent: true\n        });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, {\n          parent: true\n        });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, \"w\");\n\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: function (path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: function (path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n\n        return node.node_ops.readdir(node);\n      },\n      unlink: function (path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: function (path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n      stat: function (path, dontFollow) {\n        var lookup = FS.lookupPath(path, {\n          follow: !dontFollow\n        });\n        var node = lookup.node;\n\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return node.node_ops.getattr(node);\n      },\n      lstat: function (path) {\n        return FS.stat(path, true);\n      },\n      chmod: function (path, mode, dontFollow) {\n        var node;\n\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        node.node_ops.setattr(node, {\n          mode: mode & 4095 | node.mode & ~4095,\n          timestamp: Date.now()\n        });\n      },\n      lchmod: function (path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: function (fd, mode) {\n        var stream = FS.getStream(fd);\n\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n\n        FS.chmod(stream.node, mode);\n      },\n      chown: function (path, uid, gid, dontFollow) {\n        var node;\n\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n        });\n      },\n      lchown: function (path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: function (fd, uid, gid) {\n        var stream = FS.getStream(fd);\n\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: function (path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node;\n\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: true\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var errCode = FS.nodePermissions(node, \"w\");\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n      ftruncate: function (fd, len) {\n        var stream = FS.getStream(fd);\n\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        FS.truncate(stream.node, len);\n      },\n      utime: function (path, atime, mtime) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n      open: function (path, flags, mode, fd_start, fd_end) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n\n        flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode === \"undefined\" ? 438 : mode;\n\n        if (flags & 64) {\n          mode = mode & 4095 | 32768;\n        } else {\n          mode = 0;\n        }\n\n        var node;\n\n        if (typeof path === \"object\") {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          id: node.id,\n          flags: flags,\n          mode: node.mode,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          node_ops: node.node_ops,\n          ungotten: [],\n          error: false\n        }, fd_start, fd_end);\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n\n        return stream;\n      },\n      close: function (stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (stream.getdents) stream.getdents = null;\n\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n\n        stream.fd = null;\n      },\n      isClosed: function (stream) {\n        return stream.fd === null;\n      },\n      llseek: function (stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: function (stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var seeking = typeof position !== \"undefined\";\n\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: function (stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n\n        var seeking = typeof position !== \"undefined\";\n\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: function (stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: function (stream, address, length, position, prot, flags) {\n        if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n\n        return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n      },\n      msync: function (stream, buffer, offset, length, mmapFlags) {\n        if (!stream || !stream.stream_ops.msync) {\n          return 0;\n        }\n\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n      munmap: function (stream) {\n        return 0;\n      },\n      ioctl: function (stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: function (path, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || \"binary\";\n\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n\n        if (opts.encoding === \"utf8\") {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === \"binary\") {\n          ret = buf;\n        }\n\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: function (path, data, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n\n        if (typeof data === \"string\") {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error(\"Unsupported data type\");\n        }\n\n        FS.close(stream);\n      },\n      cwd: function () {\n        return FS.currentPath;\n      },\n      chdir: function (path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: function () {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n      },\n      createDefaultDevices: function () {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: function () {\n            return 0;\n          },\n          write: function (stream, buffer, offset, length, pos) {\n            return length;\n          }\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var random_device = getRandomDevice();\n        FS.createDevice(\"/dev\", \"random\", random_device);\n        FS.createDevice(\"/dev\", \"urandom\", random_device);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n      },\n      createSpecialDirectories: function () {\n        FS.mkdir(\"/proc\");\n        var proc_self = FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount({\n          mount: function () {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = {\n              lookup: function (parent, name) {\n                var fd = +name;\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                var ret = {\n                  parent: null,\n                  mount: {\n                    mountpoint: \"fake\"\n                  },\n                  node_ops: {\n                    readlink: function () {\n                      return stream.path;\n                    }\n                  }\n                };\n                ret.parent = ret;\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, \"/proc/self/fd\");\n      },\n      createStandardStreams: function () {\n        if (Module[\"stdin\"]) {\n          FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n\n        if (Module[\"stdout\"]) {\n          FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n\n        if (Module[\"stderr\"]) {\n          FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n        } else {\n          FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n\n        var stdin = FS.open(\"/dev/stdin\", 0);\n        var stdout = FS.open(\"/dev/stdout\", 1);\n        var stderr = FS.open(\"/dev/stderr\", 1);\n      },\n      ensureErrnoError: function () {\n        if (FS.ErrnoError) return;\n\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n\n          this.setErrno(errno);\n          this.message = \"FS error\";\n        };\n\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        [44].forEach(function (code) {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = \"<generic error, no stack>\";\n        });\n      },\n      staticInit: function () {\n        FS.ensureErrnoError();\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = {\n          \"MEMFS\": MEMFS\n        };\n      },\n      init: function (input, output, error) {\n        FS.init.initialized = true;\n        FS.ensureErrnoError();\n        Module[\"stdin\"] = input || Module[\"stdin\"];\n        Module[\"stdout\"] = output || Module[\"stdout\"];\n        Module[\"stderr\"] = error || Module[\"stderr\"];\n        FS.createStandardStreams();\n      },\n      quit: function () {\n        FS.init.initialized = false;\n        var fflush = Module[\"_fflush\"];\n        if (fflush) fflush(0);\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n\n          if (!stream) {\n            continue;\n          }\n\n          FS.close(stream);\n        }\n      },\n      getMode: function (canRead, canWrite) {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: function (path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n\n        if (ret.exists) {\n          return ret.object;\n        } else {\n          return null;\n        }\n      },\n      analyzePath: function (path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          path = lookup.path;\n        } catch (e) {}\n\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null\n        };\n\n        try {\n          var lookup = FS.lookupPath(path, {\n            parent: true\n          });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === \"/\";\n        } catch (e) {\n          ret.error = e.errno;\n        }\n\n        return ret;\n      },\n      createPath: function (parent, path, canRead, canWrite) {\n        parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n\n          parent = current;\n        }\n\n        return current;\n      },\n      createFile: function (parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: function (parent, name, data, canRead, canWrite, canOwn) {\n        var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n\n        if (data) {\n          if (typeof data === \"string\") {\n            var arr = new Array(data.length);\n\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n\n        return node;\n      },\n      createDevice: function (parent, name, input, output) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n          open: function (stream) {\n            stream.seekable = false;\n          },\n          close: function (stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: function (stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n\n            for (var i = 0; i < length; i++) {\n              var result;\n\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n\n            return bytesRead;\n          },\n          write: function (stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: function (obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n\n        if (typeof XMLHttpRequest !== \"undefined\") {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n        }\n      },\n      createLazyFile: function (parent, name, url, canRead, canWrite) {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = idx / this.chunkSize | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"HEAD\", url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n          var chunkSize = 1024 * 1024;\n          if (!hasByteServing) chunkSize = datalength;\n\n          var doXHR = function (from, to) {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n            if (typeof Uint8Array != \"undefined\") xhr.responseType = \"arraybuffer\";\n\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n            }\n\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n\n            if (xhr.response !== undefined) {\n              return new Uint8Array(xhr.response || []);\n            } else {\n              return intArrayFromString(xhr.responseText || \"\", true);\n            }\n          };\n\n          var lazyArray = this;\n          lazyArray.setDataGetter(function (chunkNum) {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum + 1) * chunkSize - 1;\n            end = Math.min(end, datalength - 1);\n\n            if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n\n            if (typeof lazyArray.chunks[chunkNum] === \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n\n          if (usesGzip || !datalength) {\n            chunkSize = datalength = 1;\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n\n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n\n        if (typeof XMLHttpRequest !== \"undefined\") {\n          if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n\n                return this._chunkSize;\n              }\n            }\n          });\n          var properties = {\n            isDevice: false,\n            contents: lazyArray\n          };\n        } else {\n          var properties = {\n            isDevice: false,\n            url: url\n          };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            }\n          }\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(function (key) {\n          var fn = node.stream_ops[key];\n\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n\n        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n          FS.forceLoadFile(node);\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n\n          return size;\n        };\n\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n        Browser.init();\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency(\"cp \" + fullname);\n\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n\n            if (!dontCreateFile) {\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n            }\n\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n\n          var handled = false;\n          Module[\"preloadPlugins\"].forEach(function (plugin) {\n            if (handled) return;\n\n            if (plugin[\"canHandle\"](fullname)) {\n              plugin[\"handle\"](byteArray, fullname, finish, function () {\n                if (onerror) onerror();\n                removeRunDependency(dep);\n              });\n              handled = true;\n            }\n          });\n          if (!handled) finish(byteArray);\n        }\n\n        addRunDependency(dep);\n\n        if (typeof url == \"string\") {\n          asyncLoad(url, function (byteArray) {\n            processData(byteArray);\n          }, onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: function () {\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n      },\n      DB_NAME: function () {\n        return \"EM_FS_\" + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: \"FILE_DATA\",\n      saveFilesToDB: function (paths, onload, onerror) {\n        onload = onload || function () {};\n\n        onerror = onerror || function () {};\n\n        var indexedDB = FS.indexedDB();\n\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n\n        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n          out(\"creating db\");\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n              fail = 0,\n              total = paths.length;\n\n          function finish() {\n            if (fail == 0) onload();else onerror();\n          }\n\n          paths.forEach(function (path) {\n            var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n\n            putRequest.onsuccess = function putRequest_onsuccess() {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n\n            putRequest.onerror = function putRequest_onerror() {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: function (paths, onload, onerror) {\n        onload = onload || function () {};\n\n        onerror = onerror || function () {};\n\n        var indexedDB = FS.indexedDB();\n\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n\n        openRequest.onupgradeneeded = onerror;\n\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n              fail = 0,\n              total = paths.length;\n\n          function finish() {\n            if (fail == 0) onload();else onerror();\n          }\n\n          paths.forEach(function (path) {\n            var getRequest = files.get(path);\n\n            getRequest.onsuccess = function getRequest_onsuccess() {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n\n              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n              ok++;\n              if (ok + fail == total) finish();\n            };\n\n            getRequest.onerror = function getRequest_onerror() {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n\n        openRequest.onerror = onerror;\n      }\n    };\n    var SYSCALLS = {\n      mappings: {},\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function (dirfd, path, allowEmpty) {\n        if (path[0] === \"/\") {\n          return path;\n        }\n\n        var dir;\n\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = FS.getStream(dirfd);\n          if (!dirstream) throw new FS.ErrnoError(8);\n          dir = dirstream.path;\n        }\n\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n\n          return dir;\n        }\n\n        return PATH.join2(dir, path);\n      },\n      doStat: function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            return -54;\n          }\n\n          throw e;\n        }\n\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[buf + 4 >> 2] = 0;\n        HEAP32[buf + 8 >> 2] = stat.ino;\n        HEAP32[buf + 12 >> 2] = stat.mode;\n        HEAP32[buf + 16 >> 2] = stat.nlink;\n        HEAP32[buf + 20 >> 2] = stat.uid;\n        HEAP32[buf + 24 >> 2] = stat.gid;\n        HEAP32[buf + 28 >> 2] = stat.rdev;\n        HEAP32[buf + 32 >> 2] = 0;\n        tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n        HEAP32[buf + 48 >> 2] = 4096;\n        HEAP32[buf + 52 >> 2] = stat.blocks;\n        HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n        HEAP32[buf + 60 >> 2] = 0;\n        HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n        HEAP32[buf + 68 >> 2] = 0;\n        HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n        HEAP32[buf + 76 >> 2] = 0;\n        tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];\n        return 0;\n      },\n      doMsync: function (addr, stream, len, flags, offset) {\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      doMkdir: function (path, mode) {\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === \"/\") path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      },\n      doMknod: function (path, mode, dev) {\n        switch (mode & 61440) {\n          case 32768:\n          case 8192:\n          case 24576:\n          case 4096:\n          case 49152:\n            break;\n\n          default:\n            return -28;\n        }\n\n        FS.mknod(path, mode, dev);\n        return 0;\n      },\n      doReadlink: function (path, buf, bufsize) {\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n        HEAP8[buf + len] = endChar;\n        return len;\n      },\n      doAccess: function (path, amode) {\n        if (amode & ~7) {\n          return -28;\n        }\n\n        var node;\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        node = lookup.node;\n\n        if (!node) {\n          return -44;\n        }\n\n        var perms = \"\";\n        if (amode & 4) perms += \"r\";\n        if (amode & 2) perms += \"w\";\n        if (amode & 1) perms += \"x\";\n\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n\n        return 0;\n      },\n      doDup: function (path, flags, suggestFD) {\n        var suggest = FS.getStream(suggestFD);\n        if (suggest) FS.close(suggest);\n        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n      },\n      doReadv: function (stream, iov, iovcnt, offset) {\n        var ret = 0;\n\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n          var curr = FS.read(stream, HEAP8, ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n          if (curr < len) break;\n        }\n\n        return ret;\n      },\n      doWritev: function (stream, iov, iovcnt, offset) {\n        var ret = 0;\n\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n          var curr = FS.write(stream, HEAP8, ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n        }\n\n        return ret;\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n      get64: function (low, high) {\n        return low;\n      }\n    };\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAP32[__environ + i * 4 >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAP32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAP32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var HIGH_OFFSET = 4294967296;\n        var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n        var DOUBLE_LIMIT = 9007199254740992;\n\n        if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n          return -61;\n        }\n\n        FS.llseek(stream, offset, whence);\n        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n\n    function _setTempRet0(val) {\n      setTempRet0(val);\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    function __arraySum(array, index) {\n      var sum = 0;\n\n      for (var i = 0; i <= index; sum += array[i++]) {}\n\n      return sum;\n    }\n\n    var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    function __addDays(date, days) {\n      var newDate = new Date(date.getTime());\n\n      while (days > 0) {\n        var leap = __isLeapYear(newDate.getFullYear());\n\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n\n        if (days > daysInCurrentMonth - newDate.getDate()) {\n          days -= daysInCurrentMonth - newDate.getDate() + 1;\n          newDate.setDate(1);\n\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth + 1);\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear() + 1);\n          }\n        } else {\n          newDate.setDate(newDate.getDate() + days);\n          return newDate;\n        }\n      }\n\n      return newDate;\n    }\n\n    function _strftime(s, maxsize, format, tm) {\n      var tm_zone = HEAP32[tm + 40 >> 2];\n      var date = {\n        tm_sec: HEAP32[tm >> 2],\n        tm_min: HEAP32[tm + 4 >> 2],\n        tm_hour: HEAP32[tm + 8 >> 2],\n        tm_mday: HEAP32[tm + 12 >> 2],\n        tm_mon: HEAP32[tm + 16 >> 2],\n        tm_year: HEAP32[tm + 20 >> 2],\n        tm_wday: HEAP32[tm + 24 >> 2],\n        tm_yday: HEAP32[tm + 28 >> 2],\n        tm_isdst: HEAP32[tm + 32 >> 2],\n        tm_gmtoff: HEAP32[tm + 36 >> 2],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n      };\n      var pattern = UTF8ToString(format);\n      var EXPANSION_RULES_1 = {\n        \"%c\": \"%a %b %d %H:%M:%S %Y\",\n        \"%D\": \"%m/%d/%y\",\n        \"%F\": \"%Y-%m-%d\",\n        \"%h\": \"%b\",\n        \"%r\": \"%I:%M:%S %p\",\n        \"%R\": \"%H:%M\",\n        \"%T\": \"%H:%M:%S\",\n        \"%x\": \"%m/%d/%y\",\n        \"%X\": \"%H:%M:%S\",\n        \"%Ec\": \"%c\",\n        \"%EC\": \"%C\",\n        \"%Ex\": \"%m/%d/%y\",\n        \"%EX\": \"%H:%M:%S\",\n        \"%Ey\": \"%y\",\n        \"%EY\": \"%Y\",\n        \"%Od\": \"%d\",\n        \"%Oe\": \"%e\",\n        \"%OH\": \"%H\",\n        \"%OI\": \"%I\",\n        \"%Om\": \"%m\",\n        \"%OM\": \"%M\",\n        \"%OS\": \"%S\",\n        \"%Ou\": \"%u\",\n        \"%OU\": \"%U\",\n        \"%OV\": \"%V\",\n        \"%Ow\": \"%w\",\n        \"%OW\": \"%W\",\n        \"%Oy\": \"%y\"\n      };\n\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n      }\n\n      var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n      function leadingSomething(value, digits, character) {\n        var str = typeof value === \"number\" ? value.toString() : value || \"\";\n\n        while (str.length < digits) {\n          str = character[0] + str;\n        }\n\n        return str;\n      }\n\n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, \"0\");\n      }\n\n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : value > 0 ? 1 : 0;\n        }\n\n        var compare;\n\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate() - date2.getDate());\n          }\n        }\n\n        return compare;\n      }\n\n      function getFirstWeekStartDate(janFourth) {\n        switch (janFourth.getDay()) {\n          case 0:\n            return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n          case 1:\n            return janFourth;\n\n          case 2:\n            return new Date(janFourth.getFullYear(), 0, 3);\n\n          case 3:\n            return new Date(janFourth.getFullYear(), 0, 2);\n\n          case 4:\n            return new Date(janFourth.getFullYear(), 0, 1);\n\n          case 5:\n            return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n          case 6:\n            return new Date(janFourth.getFullYear() - 1, 11, 30);\n        }\n      }\n\n      function getWeekBasedYear(date) {\n        var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n          if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n            return thisDate.getFullYear() + 1;\n          } else {\n            return thisDate.getFullYear();\n          }\n        } else {\n          return thisDate.getFullYear() - 1;\n        }\n      }\n\n      var EXPANSION_RULES_2 = {\n        \"%a\": function (date) {\n          return WEEKDAYS[date.tm_wday].substring(0, 3);\n        },\n        \"%A\": function (date) {\n          return WEEKDAYS[date.tm_wday];\n        },\n        \"%b\": function (date) {\n          return MONTHS[date.tm_mon].substring(0, 3);\n        },\n        \"%B\": function (date) {\n          return MONTHS[date.tm_mon];\n        },\n        \"%C\": function (date) {\n          var year = date.tm_year + 1900;\n          return leadingNulls(year / 100 | 0, 2);\n        },\n        \"%d\": function (date) {\n          return leadingNulls(date.tm_mday, 2);\n        },\n        \"%e\": function (date) {\n          return leadingSomething(date.tm_mday, 2, \" \");\n        },\n        \"%g\": function (date) {\n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        \"%G\": function (date) {\n          return getWeekBasedYear(date);\n        },\n        \"%H\": function (date) {\n          return leadingNulls(date.tm_hour, 2);\n        },\n        \"%I\": function (date) {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        \"%j\": function (date) {\n          return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n        },\n        \"%m\": function (date) {\n          return leadingNulls(date.tm_mon + 1, 2);\n        },\n        \"%M\": function (date) {\n          return leadingNulls(date.tm_min, 2);\n        },\n        \"%n\": function () {\n          return \"\\n\";\n        },\n        \"%p\": function (date) {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return \"AM\";\n          } else {\n            return \"PM\";\n          }\n        },\n        \"%S\": function (date) {\n          return leadingNulls(date.tm_sec, 2);\n        },\n        \"%t\": function () {\n          return \"\\t\";\n        },\n        \"%u\": function (date) {\n          return date.tm_wday || 7;\n        },\n        \"%U\": function (date) {\n          var janFirst = new Date(date.tm_year + 1900, 0, 1);\n          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n          var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n\n          if (compareByDay(firstSunday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n            var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n            var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n            return leadingNulls(Math.ceil(days / 7), 2);\n          }\n\n          return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n        },\n        \"%V\": function (date) {\n          var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);\n          var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n\n          var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n\n          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n            return \"53\";\n          }\n\n          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n            return \"01\";\n          }\n\n          var daysDifference;\n\n          if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {\n            daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();\n          } else {\n            daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();\n          }\n\n          return leadingNulls(Math.ceil(daysDifference / 7), 2);\n        },\n        \"%w\": function (date) {\n          return date.tm_wday;\n        },\n        \"%W\": function (date) {\n          var janFirst = new Date(date.tm_year, 0, 1);\n          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n          var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n\n          if (compareByDay(firstMonday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n            var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n            var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n            return leadingNulls(Math.ceil(days / 7), 2);\n          }\n\n          return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n        },\n        \"%y\": function (date) {\n          return (date.tm_year + 1900).toString().substring(2);\n        },\n        \"%Y\": function (date) {\n          return date.tm_year + 1900;\n        },\n        \"%z\": function (date) {\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          off = off / 60 * 100 + off % 60;\n          return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n        },\n        \"%Z\": function (date) {\n          return date.tm_zone;\n        },\n        \"%%\": function () {\n          return \"%\";\n        }\n      };\n\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n        }\n      }\n\n      var bytes = intArrayFromString(pattern, false);\n\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n\n      writeArrayToMemory(bytes, s);\n      return bytes.length - 1;\n    }\n\n    function _strftime_l(s, maxsize, format, tm) {\n      return _strftime(s, maxsize, format, tm);\n    }\n\n    InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n    embind_init_charCodes();\n    BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n    init_ClassHandle();\n    init_RegisteredPointer();\n    init_embind();\n    UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n    init_emval();\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        }\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        }\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        }\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        }\n      }\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n\n    var asmLibraryArg = {\n      \"d\": ___cxa_allocate_exception,\n      \"e\": ___cxa_throw,\n      \"n\": __embind_finalize_value_array,\n      \"p\": __embind_finalize_value_object,\n      \"y\": __embind_register_bigint,\n      \"I\": __embind_register_bool,\n      \"h\": __embind_register_class,\n      \"g\": __embind_register_class_constructor,\n      \"c\": __embind_register_class_function,\n      \"r\": __embind_register_class_property,\n      \"H\": __embind_register_emval,\n      \"q\": __embind_register_enum,\n      \"i\": __embind_register_enum_value,\n      \"v\": __embind_register_float,\n      \"a\": __embind_register_function,\n      \"k\": __embind_register_integer,\n      \"j\": __embind_register_memory_view,\n      \"w\": __embind_register_std_string,\n      \"t\": __embind_register_std_wstring,\n      \"o\": __embind_register_value_array,\n      \"b\": __embind_register_value_array_element,\n      \"m\": __embind_register_value_object,\n      \"f\": __embind_register_value_object_field,\n      \"J\": __embind_register_void,\n      \"K\": __emval_decref,\n      \"L\": __emval_incref,\n      \"l\": __emval_take_value,\n      \"u\": _abort,\n      \"A\": _emscripten_memcpy_big,\n      \"s\": _emscripten_resize_heap,\n      \"C\": _environ_get,\n      \"D\": _environ_sizes_get,\n      \"G\": _fd_close,\n      \"E\": _fd_read,\n      \"x\": _fd_seek,\n      \"F\": _fd_write,\n      \"z\": _setTempRet0,\n      \"B\": _strftime_l\n    };\n    var asm = createWasm();\n\n    var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function () {\n      return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n    };\n\n    var _malloc = Module[\"_malloc\"] = function () {\n      return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n    };\n\n    var _free = Module[\"_free\"] = function () {\n      return (_free = Module[\"_free\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n    };\n\n    var ___getTypeName = Module[\"___getTypeName\"] = function () {\n      return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"R\"]).apply(null, arguments);\n    };\n\n    var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function () {\n      return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"S\"]).apply(null, arguments);\n    };\n\n    var stackSave = Module[\"stackSave\"] = function () {\n      return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"T\"]).apply(null, arguments);\n    };\n\n    var stackRestore = Module[\"stackRestore\"] = function () {\n      return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"U\"]).apply(null, arguments);\n    };\n\n    var stackAlloc = Module[\"stackAlloc\"] = function () {\n      return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"V\"]).apply(null, arguments);\n    };\n\n    var dynCall_jiji = Module[\"dynCall_jiji\"] = function () {\n      return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"W\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function () {\n      return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"X\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function () {\n      return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"Y\"]).apply(null, arguments);\n    };\n\n    var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function () {\n      return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"Z\"]).apply(null, arguments);\n    };\n\n    var dynCall_viijii = Module[\"dynCall_viijii\"] = function () {\n      return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"_\"]).apply(null, arguments);\n    };\n\n    Module[\"ccall\"] = ccall;\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    Module[\"run\"] = run;\n\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n\n    run();\n    return Module.ready;\n  };\n}();\n\nexport default Module;","map":{"version":3,"sources":["/Users/romain/Documents/Perso/Dev/google-auth-firebase-main/node_modules/@splinetool/runtime/build/process.js"],"names":["Module","_scriptDir","document","currentScript","src","undefined","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","moduleOverrides","key","hasOwnProperty","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","scriptDirectory","locateFile","path","read_","readAsync","readBinary","setWindowTitle","self","location","href","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","Uint8Array","response","onload","onerror","title","out","console","log","bind","err","warn","tempRet0","setTempRet0","value","wasmBinary","noExitRuntime","WebAssembly","abort","wasmMemory","ABORT","EXITSTATUS","assert","condition","text","getCFunc","ident","func","ccall","returnType","argTypes","args","opts","toC","str","ret","len","length","stackAlloc","stringToUTF8","arr","writeArrayToMemory","convertReturnValue","UTF8ToString","Boolean","cArgs","stack","i","converter","stackSave","apply","onDone","stackRestore","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","u0","String","fromCharCode","u1","u2","ch","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","lengthBytesUTF8","UTF16Decoder","UTF16ToString","maxIdx","HEAPU16","codeUnit","HEAP16","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","HEAP32","stringToUTF32","trailSurrogate","lengthBytesUTF32","array","buffer","HEAP8","set","writeAsciiToMemory","dontAddNull","alignUp","x","multiple","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","INITIAL_MEMORY","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeInitialized","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","FS","init","initialized","ignorePermissions","TTY","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","clearInterval","callback","what","e","RuntimeError","dataURIPrefix","isDataURI","filename","startsWith","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","binary","instantiate","reason","instantiateAsync","instantiateStreaming","tempDouble","tempI64","callbacks","arg","getWasmTableEntry","wasmTableMirror","funcPtr","get","___cxa_allocate_exception","size","_malloc","ExceptionInfo","excPtr","set_type","type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","add_ref","release_ref","prev","exceptionLast","uncaughtExceptionCount","___cxa_throw","tupleRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","f","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","Error","toString","prototype","Object","create","constructor","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","forEach","onComplete","typeConverters","myTypeConverters","registerType","Array","unregisteredTypes","registered","dt","push","__embind_finalize_value_array","rawTupleType","reg","elements","elementsLength","elementTypes","map","elt","getterReturnType","concat","setterArgumentType","rawConstructor","rawDestructor","getter","getterContext","setter","setterContext","read","write","o","rv","TypeError","destructorFunction","structRegistrations","__embind_finalize_value_object","structType","fieldRecords","fields","fieldTypes","field","fieldName","__embind_register_bigint","primitiveType","minRange","maxRange","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","shallowCopyInternalPointer","count","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","finalizationRegistry","detachFinalizer","runDestructor","releaseClassHandle","toDelete","attachFinalizer","FinalizationRegistry","register","unregister","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","fn","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","hasSmartPtrType","hasSmartPtr","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","actualType","registeredPointerRecord","call","toType","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","dynCallLegacy","sig","dynCall","includes","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","join","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","classType","unboundTypeHandler","splice","craftInvokerFunction","new_","argumentList","dummy","r","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","invokerFunction","__embind_register_class_function","rawInvoker","context","isPureVirtual","Symbol","substring","unboundTypesHandler","method","className","memberFunction","validateThis","this_","__embind_register_class_property","getterSignature","setterSignature","desc","enumerable","configurable","v","defineProperty","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","toValue","__embind_register_emval","enumReadValueFromPointer","signed","__embind_register_enum","isSigned","ctor","values","requireRegisteredType","impl","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","t","floatReadValueFromPointer","__embind_register_float","__embind_register_function","invokerArgsArray","slice","integerReadValueFromPointer","readS8FromPointer","readU8FromPointer","readS16FromPointer","readU16FromPointer","readS32FromPointer","readU32FromPointer","__embind_register_integer","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","data","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","ArrayBuffer","getLength","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","__embind_register_value_array","constructorSignature","__embind_register_value_array_element","__embind_register_value_object","__embind_register_value_object_field","__embind_register_void","isVoid","__emval_incref","__emval_take_value","argv","_abort","_emscripten_memcpy_big","dest","num","copyWithin","emscripten_realloc_buffer","grow","byteLength","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","Math","min","newSize","max","replacement","ENV","getExecutableName","getEnvStrings","strings","lang","navigator","languages","env","PATH","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","last","normalize","isAbsolute","charAt","trailingSlash","split","filter","p","dirname","root","dir","basename","lastSlash","extname","paths","join2","l","getRandomDevice","crypto","randomBuffer","getRandomValues","PATH_FS","resolvedPath","resolvedAbsolute","cwd","relative","from","to","trim","start","end","fromParts","toParts","samePartsLength","outputParts","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","flush","offset","pos","get_char","bytesRead","timestamp","Date","now","put_char","default_tty_ops","window","prompt","readline","intArrayFromString","val","default_tty1_ops","mmapAlloc","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","resizeFileStorage","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","address","prot","flags","allocated","byteOffset","mmapFlags","bytesWritten","asyncLoad","noRunDep","dep","arrayBuffer","event","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","lookupPath","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","object","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","next","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","munmap","ioctl","cmd","readFile","encoding","writeFile","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","createDevice","createSpecialDirectories","proc_self","createStandardStreams","stdin","stdout","stderr","ensureErrnoError","setErrno","code","staticInit","quit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","LazyUint8Array_get","chunkOffset","chunkSize","chunkNum","setDataGetter","LazyUint8Array_setDataGetter","cacheLength","LazyUint8Array_cacheLength","datalength","Number","getResponseHeader","header","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","lazyArray","_length","_chunkSize","defineProperties","forceLoadLazyFile","stream_ops_read","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","handled","plugin","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","openRequest_onupgradeneeded","db","createObjectStore","onsuccess","openRequest_onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","putRequest_onsuccess","putRequest_onerror","loadFilesFromDB","getRequest","getRequest_onsuccess","getRequest_onerror","SYSCALLS","mappings","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","doStat","abs","floor","getTime","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","pnum","_fd_seek","offset_low","offset_high","newOffset","HIGH_OFFSET","DOUBLE_LIMIT","_fd_write","_setTempRet0","__isLeapYear","year","__arraySum","index","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","_strftime","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","firstSundayUntilEndJanuary","daysDifference","firstMonday","firstMondayUntilEndJanuary","off","ahead","bytes","_strftime_l","readMode","writeMode","stringy","u8array","numBytesWritten","asm","___wasm_call_ctors","___embind_register_native_and_builtin_types","dynCall_jiji","dynCall_iiiiij","dynCall_iiiiijj","dynCall_iiiiiijj","dynCall_viijii","calledRun","runCaller","run","doRun","setTimeout","ready"],"mappings":"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","sourcesContent":["\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module=typeof Module!==\"undefined\"?Module:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"process.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"M\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"O\"];addOnInit(Module[\"asm\"][\"N\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var tupleRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_array(rawTupleType){var reg=tupleRegistrations[rawTupleType];delete tupleRegistrations[rawTupleType];var elements=reg.elements;var elementsLength=elements.length;var elementTypes=elements.map(function(elt){return elt.getterReturnType}).concat(elements.map(function(elt){return elt.setterArgumentType}));var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;whenDependentTypesAreResolved([rawTupleType],elementTypes,function(elementTypes){elements.forEach(function(elt,i){var getterReturnType=elementTypes[i];var getter=elt.getter;var getterContext=elt.getterContext;var setterArgumentType=elementTypes[i+elementsLength];var setter=elt.setter;var setterContext=elt.setterContext;elt.read=function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))};elt.write=function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv=new Array(elementsLength);for(var i=0;i<elementsLength;++i){rv[i]=elements[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){if(elementsLength!==o.length){throw new TypeError(\"Incorrect number of tuple elements for \"+reg.name+\": expected=\"+elementsLength+\", actual=\"+o.length)}var ptr=rawConstructor();for(var i=0;i<elementsLength;++i){elements[i].write(ptr,o[i])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}var structRegistrations={};function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(function(field){return field.getterReturnType}).concat(fieldRecords.map(function(field){return field.setterArgumentType}));whenDependentTypesAreResolved([structType],fieldTypes,function(fieldTypes){var fields={};fieldRecords.forEach(function(field,i){var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationRegistry=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=function(handle){return handle};return handle}finalizationRegistry=new FinalizationRegistry(function(info){releaseClassHandle(info.$$)});attachFinalizer=function(handle){var $$=handle.$$;var info={$$:$$};finalizationRegistry.register(handle,info,handle);return handle};detachFinalizer=function(handle){finalizationRegistry.unregister(handle)};return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])}}else{desc.set=function(v){throwBindingError(humanName+\" is a read-only property\")}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function enumReadValueFromPointer(name,shift,signed){switch(shift){case 0:return function(pointer){var heap=signed?HEAP8:HEAPU8;return this[\"fromWireType\"](heap[pointer])};case 1:return function(pointer){var heap=signed?HEAP16:HEAPU16;return this[\"fromWireType\"](heap[pointer>>1])};case 2:return function(pointer){var heap=signed?HEAP32:HEAPU32;return this[\"fromWireType\"](heap[pointer>>2])};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_enum(rawType,name,size,isSigned){var shift=getShiftFromSize(size);name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":function(c){return this.constructor.values[c]},\"toWireType\":function(destructors,c){return c.value},\"argPackAdvance\":8,\"readValueFromPointer\":enumReadValueFromPointer(name,shift,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __embind_register_enum_value(rawEnumType,name,enumValue){var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(enumType.name+\"_\"+name,function(){})}});Enum.values[enumValue]=Value;Enum[name]=Value}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.includes(\"unsigned\");registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_array(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){tupleRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),elements:[]}}function __embind_register_value_array_element(rawTupleType,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){tupleRegistrations[rawTupleType].elements.push({getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return Emval.toHandle(v)}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator===\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else return function(){abort(\"randomDevice\")}}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function mmapAlloc(size){abort()}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,address,length,position,prot,flags){if(address!==0){throw new FS.ErrnoError(28)}if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}}}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),id:node.id,flags:flags,mode:node.mode,seekable:true,position:0,stream_ops:node.stream_ops,node_ops:node.node_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,address,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,address,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:function(){var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){FS.forceLoadFile(node);var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach(function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(path[0]===\"/\"){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;if(!node){return-44}var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(low,high){return low}};function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _setTempRet0(val){setTempRet0(val)}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}else{return\"PM\"}},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\"},\"%V\":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return\"53\"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return\"01\"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\"},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={\"d\":___cxa_allocate_exception,\"e\":___cxa_throw,\"n\":__embind_finalize_value_array,\"p\":__embind_finalize_value_object,\"y\":__embind_register_bigint,\"I\":__embind_register_bool,\"h\":__embind_register_class,\"g\":__embind_register_class_constructor,\"c\":__embind_register_class_function,\"r\":__embind_register_class_property,\"H\":__embind_register_emval,\"q\":__embind_register_enum,\"i\":__embind_register_enum_value,\"v\":__embind_register_float,\"a\":__embind_register_function,\"k\":__embind_register_integer,\"j\":__embind_register_memory_view,\"w\":__embind_register_std_string,\"t\":__embind_register_std_wstring,\"o\":__embind_register_value_array,\"b\":__embind_register_value_array_element,\"m\":__embind_register_value_object,\"f\":__embind_register_value_object_field,\"J\":__embind_register_void,\"K\":__emval_decref,\"L\":__emval_incref,\"l\":__emval_take_value,\"u\":_abort,\"A\":_emscripten_memcpy_big,\"s\":_emscripten_resize_heap,\"C\":_environ_get,\"D\":_environ_sizes_get,\"G\":_fd_close,\"E\":_fd_read,\"x\":_fd_seek,\"F\":_fd_write,\"z\":_setTempRet0,\"B\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=function(){return(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=function(){return(dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=function(){return(dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var dynCall_viijii=Module[\"dynCall_viijii\"]=function(){return(dynCall_viijii=Module[\"dynCall_viijii\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return Module.ready\n}\n);\n})();\nexport default Module;"]},"metadata":{},"sourceType":"module"}